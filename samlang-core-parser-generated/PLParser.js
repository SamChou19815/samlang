// @generated
/* eslint-disable */
// prettier-ignore
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NotExprContext=exports.NegExprContext=exports.FieldAccessExprContext=exports.StatementBlockExprContext=exports.VariantConstructorContext=exports.ObjConstructorContext=exports.TupleConstructorContext=exports.ClassMemberExprContext=exports.VariableExprContext=exports.ThisExprContext=exports.LiteralExprContext=exports.NestedExprContext=exports.ExpressionContext=exports.ValStatementContext=exports.StatementContext=exports.StatementBlockContext=exports.PatternToExprContext=exports.TypeAnnotationContext=exports.OptionallyAnnotatedParameterContext=exports.AnnotatedVariableContext=exports.TypeParametersContext=exports.FunctionTypeNoArgContext=exports.FunctionTypeContext=exports.TupleTypeContext=exports.SingleIdentifierTypeContext=exports.BoolTypeContext=exports.StrTypeContext=exports.IntTypeContext=exports.UnitTypeContext=exports.TypeExprContext=exports.VariantTypeConstructorDeclarationContext=exports.ObjectTypeFieldDeclarationContext=exports.VariantTypeContext=exports.ObjTypeContext=exports.TypeDeclarationContext=exports.TypeParametersDeclarationContext=exports.ClassMemberDeclarationContext=exports.ClassMemberDefinitionContext=exports.UtilClassHeaderContext=exports.ClassHeaderContext=exports.ClassHeaderDeclarationContext=exports.InterfazeContext=exports.ClazzContext=exports.InterfaceAsModuleMemberContext=exports.ClassAsModuleMemberContext=exports.ModuleMemberContext=exports.ModuleReferenceContext=exports.ImportModuleMembersContext=exports.ModuleContext=exports.PLParser=void 0,exports.LiteralContext=exports.ComparisonOperatorContext=exports.TermOperatorContext=exports.FactorOperatorContext=exports.RenamedVarContext=exports.RawVarContext=exports.VarOrRenamedVarContext=exports.VarOrWildCardContext=exports.WildcardPatternContext=exports.VariablePatternContext=exports.ObjectPatternContext=exports.TuplePatternContext=exports.PatternContext=exports.FunctionArgumentsContext=exports.ShorthandObjFieldDeclarationContext=exports.NormalObjFieldDeclarationContext=exports.ObjectFieldDeclarationContext=exports.ObjectFieldDeclarationsContext=exports.NoArgFunExprContext=exports.FunExprContext=exports.MatchExprContext=exports.IfElseExprContext=exports.ConcatExprContext=exports.DisjunctionExprContext=exports.ConjunctionExprContext=exports.ComparisonExprContext=exports.TermExprContext=exports.FactorExprContext=exports.FunctionApplicationExprContext=exports.PrintLineExprContext=exports.IntToStringExprContext=exports.StringToIntExprContext=exports.PanicExprContext=void 0;const ATN_1=require("antlr4ts/atn/ATN"),ATNDeserializer_1=require("antlr4ts/atn/ATNDeserializer"),FailedPredicateException_1=require("antlr4ts/FailedPredicateException"),NoViableAltException_1=require("antlr4ts/NoViableAltException"),Parser_1=require("antlr4ts/Parser"),ParserRuleContext_1=require("antlr4ts/ParserRuleContext"),ParserATNSimulator_1=require("antlr4ts/atn/ParserATNSimulator"),RecognitionException_1=require("antlr4ts/RecognitionException"),Token_1=require("antlr4ts/Token"),VocabularyImpl_1=require("antlr4ts/VocabularyImpl"),Utils=require("antlr4ts/misc/Utils");class PLParser extends Parser_1.Parser{constructor(input){super(input),this._interp=new ParserATNSimulator_1.ParserATNSimulator(PLParser._ATN,this)}get vocabulary(){return PLParser.VOCABULARY}get grammarFileName(){return"PL.g4"}get ruleNames(){return PLParser.ruleNames}get serializedATN(){return PLParser._serializedATN}module(){let _la,_localctx=new ModuleContext(this._ctx,this.state);this.enterRule(_localctx,0,PLParser.RULE_module);try{for(this.enterOuterAlt(_localctx,1),this.state=67,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.IMPORT;)this.state=64,this.importModuleMembers(),this.state=69,this._errHandler.sync(this),_la=this._input.LA(1);for(this.state=73,this._errHandler.sync(this),_la=this._input.LA(1);0==(_la-3&-32)&&0!=(1<<_la-3&(1<<PLParser.CLASS-3|1<<PLParser.PRIVATE-3|1<<PLParser.INTERFACE-3));)this.state=70,this.moduleMember(),this.state=75,this._errHandler.sync(this),_la=this._input.LA(1);this.state=76,this.match(PLParser.EOF)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}importModuleMembers(){let _la,_localctx=new ImportModuleMembersContext(this._ctx,this.state);this.enterRule(_localctx,2,PLParser.RULE_importModuleMembers);try{for(this.enterOuterAlt(_localctx,1),this.state=78,this.match(PLParser.IMPORT),this.state=79,this.match(PLParser.LBRACE),this.state=80,this.match(PLParser.UpperId),this.state=85,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.COMMA;)this.state=81,this.match(PLParser.COMMA),this.state=82,this.match(PLParser.UpperId),this.state=87,this._errHandler.sync(this),_la=this._input.LA(1);this.state=88,this.match(PLParser.RBRACE),this.state=89,this.match(PLParser.FROM),this.state=90,this.moduleReference()}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}moduleReference(){let _la,_localctx=new ModuleReferenceContext(this._ctx,this.state);this.enterRule(_localctx,4,PLParser.RULE_moduleReference);try{for(this.enterOuterAlt(_localctx,1),this.state=92,this.match(PLParser.UpperId),this.state=97,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.DOT;)this.state=93,this.match(PLParser.DOT),this.state=94,this.match(PLParser.UpperId),this.state=99,this._errHandler.sync(this),_la=this._input.LA(1)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}moduleMember(){let _localctx=new ModuleMemberContext(this._ctx,this.state);this.enterRule(_localctx,6,PLParser.RULE_moduleMember);try{switch(this.state=102,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,4,this._ctx)){case 1:_localctx=new ClassAsModuleMemberContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=100,this.clazz();break;case 2:_localctx=new InterfaceAsModuleMemberContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=101,this.interfaze()}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}clazz(){let _la,_localctx=new ClazzContext(this._ctx,this.state);this.enterRule(_localctx,8,PLParser.RULE_clazz);try{for(this.enterOuterAlt(_localctx,1),this.state=104,this.classHeaderDeclaration(),this.state=105,this.match(PLParser.LBRACE),this.state=109,this._errHandler.sync(this),_la=this._input.LA(1);0==(-32&_la)&&0!=(1<<_la&(1<<PLParser.FUNCTION|1<<PLParser.METHOD|1<<PLParser.PRIVATE));)this.state=106,this.classMemberDefinition(),this.state=111,this._errHandler.sync(this),_la=this._input.LA(1);this.state=112,this.match(PLParser.RBRACE)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}interfaze(){let _la,_localctx=new InterfazeContext(this._ctx,this.state);this.enterRule(_localctx,10,PLParser.RULE_interfaze);try{for(this.enterOuterAlt(_localctx,1),this.state=115,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.PRIVATE&&(this.state=114,this.match(PLParser.PRIVATE)),this.state=117,this.match(PLParser.INTERFACE),this.state=118,this.match(PLParser.UpperId),this.state=120,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LT&&(this.state=119,this.typeParametersDeclaration()),this.state=122,this.match(PLParser.LBRACE),this.state=126,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.METHOD;)this.state=123,this.classMemberDeclaration(),this.state=128,this._errHandler.sync(this),_la=this._input.LA(1);this.state=129,this.match(PLParser.RBRACE)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}classHeaderDeclaration(){let _la,_localctx=new ClassHeaderDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,12,PLParser.RULE_classHeaderDeclaration);try{switch(this.state=148,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,12,this._ctx)){case 1:_localctx=new ClassHeaderContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=132,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.PRIVATE&&(this.state=131,this.match(PLParser.PRIVATE)),this.state=134,this.match(PLParser.CLASS),this.state=135,this.match(PLParser.UpperId),this.state=137,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LT&&(this.state=136,this.typeParametersDeclaration()),this.state=139,this.match(PLParser.LPAREN),this.state=140,this.typeDeclaration(),this.state=141,this.match(PLParser.RPAREN);break;case 2:_localctx=new UtilClassHeaderContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=144,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.PRIVATE&&(this.state=143,this.match(PLParser.PRIVATE)),this.state=146,this.match(PLParser.CLASS),this.state=147,this.match(PLParser.UpperId)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}classMemberDefinition(){let _la,_localctx=new ClassMemberDefinitionContext(this._ctx,this.state);this.enterRule(_localctx,14,PLParser.RULE_classMemberDefinition);try{let _alt;if(this.enterOuterAlt(_localctx,1),this.state=151,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.PRIVATE&&(this.state=150,this.match(PLParser.PRIVATE)),this.state=153,_la=this._input.LA(1),_la!==PLParser.FUNCTION&&_la!==PLParser.METHOD?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=155,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LT&&(this.state=154,this.typeParametersDeclaration()),this.state=157,this.match(PLParser.LowerId),this.state=158,this.match(PLParser.LPAREN),this.state=170,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LowerId){for(this.state=159,this.annotatedVariable(),this.state=164,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,15,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=160,this.match(PLParser.COMMA),this.state=161,this.annotatedVariable()),this.state=166,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,15,this._ctx);this.state=168,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=167,this.match(PLParser.COMMA))}this.state=172,this.match(PLParser.RPAREN),this.state=175,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COLON&&(this.state=173,this.match(PLParser.COLON),this.state=174,this.typeExpr()),this.state=177,this.match(PLParser.ASSIGN),this.state=178,this.expression(0)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}classMemberDeclaration(){let _la,_localctx=new ClassMemberDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,16,PLParser.RULE_classMemberDeclaration);try{let _alt;if(this.enterOuterAlt(_localctx,1),this.state=180,this.match(PLParser.METHOD),this.state=182,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LT&&(this.state=181,this.typeParametersDeclaration()),this.state=184,this.match(PLParser.LowerId),this.state=185,this.match(PLParser.LPAREN),this.state=197,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LowerId){for(this.state=186,this.annotatedVariable(),this.state=191,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,20,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=187,this.match(PLParser.COMMA),this.state=188,this.annotatedVariable()),this.state=193,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,20,this._ctx);this.state=195,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=194,this.match(PLParser.COMMA))}this.state=199,this.match(PLParser.RPAREN),this.state=202,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COLON&&(this.state=200,this.match(PLParser.COLON),this.state=201,this.typeExpr())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}typeParametersDeclaration(){let _la,_localctx=new TypeParametersDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,18,PLParser.RULE_typeParametersDeclaration);try{for(this.enterOuterAlt(_localctx,1),this.state=204,this.match(PLParser.LT),this.state=205,this.match(PLParser.UpperId),this.state=210,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.COMMA;)this.state=206,this.match(PLParser.COMMA),this.state=207,this.match(PLParser.UpperId),this.state=212,this._errHandler.sync(this),_la=this._input.LA(1);this.state=213,this.match(PLParser.GT)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}typeDeclaration(){let _la,_localctx=new TypeDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,20,PLParser.RULE_typeDeclaration);try{let _alt;switch(this.state=236,this._errHandler.sync(this),this._input.LA(1)){case PLParser.VAL:case PLParser.PRIVATE:for(_localctx=new ObjTypeContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=215,this.objectTypeFieldDeclaration(),this.state=220,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,25,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=216,this.match(PLParser.COMMA),this.state=217,this.objectTypeFieldDeclaration()),this.state=222,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,25,this._ctx);this.state=224,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=223,this.match(PLParser.COMMA));break;case PLParser.UpperId:_localctx=new VariantTypeContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=226,this.variantTypeConstructorDeclaration(),this.state=229,this._errHandler.sync(this),_alt=1;do{switch(_alt){case 1:this.state=227,this.match(PLParser.COMMA),this.state=228,this.variantTypeConstructorDeclaration();break;default:throw new NoViableAltException_1.NoViableAltException(this)}this.state=231,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,27,this._ctx)}while(2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER);this.state=234,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=233,this.match(PLParser.COMMA));break;default:throw new NoViableAltException_1.NoViableAltException(this)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}objectTypeFieldDeclaration(){let _la,_localctx=new ObjectTypeFieldDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,22,PLParser.RULE_objectTypeFieldDeclaration);try{this.enterOuterAlt(_localctx,1),this.state=239,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.PRIVATE&&(this.state=238,this.match(PLParser.PRIVATE)),this.state=241,this.match(PLParser.VAL),this.state=242,this.match(PLParser.LowerId),this.state=243,this.typeAnnotation()}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}variantTypeConstructorDeclaration(){let _localctx=new VariantTypeConstructorDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,24,PLParser.RULE_variantTypeConstructorDeclaration);try{this.enterOuterAlt(_localctx,1),this.state=245,this.match(PLParser.UpperId),this.state=246,this.match(PLParser.LPAREN),this.state=247,this.typeExpr(),this.state=248,this.match(PLParser.RPAREN)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}typeExpr(){let _la,_localctx=new TypeExprContext(this._ctx,this.state);this.enterRule(_localctx,26,PLParser.RULE_typeExpr);try{let _alt;switch(this.state=288,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,35,this._ctx)){case 1:_localctx=new UnitTypeContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=250,this.match(PLParser.UNIT);break;case 2:_localctx=new IntTypeContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=251,this.match(PLParser.INT);break;case 3:_localctx=new StrTypeContext(_localctx),this.enterOuterAlt(_localctx,3),this.state=252,this.match(PLParser.STRING);break;case 4:_localctx=new BoolTypeContext(_localctx),this.enterOuterAlt(_localctx,4),this.state=253,this.match(PLParser.BOOL);break;case 5:_localctx=new SingleIdentifierTypeContext(_localctx),this.enterOuterAlt(_localctx,5),this.state=254,this.match(PLParser.UpperId),this.state=256,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.LT&&(this.state=255,this.typeParameters());break;case 6:_localctx=new TupleTypeContext(_localctx),this.enterOuterAlt(_localctx,6),this.state=258,this.match(PLParser.LBRACKET),this.state=259,this.typeExpr(),this.state=262,this._errHandler.sync(this),_la=this._input.LA(1);do{this.state=260,this.match(PLParser.MUL),this.state=261,this.typeExpr(),this.state=264,this._errHandler.sync(this),_la=this._input.LA(1)}while(_la===PLParser.MUL);this.state=266,this.match(PLParser.RBRACKET);break;case 7:for(_localctx=new FunctionTypeContext(_localctx),this.enterOuterAlt(_localctx,7),this.state=268,this.match(PLParser.LPAREN),this.state=269,this.typeExpr(),this.state=274,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,33,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=270,this.match(PLParser.COMMA),this.state=271,this.typeExpr()),this.state=276,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,33,this._ctx);this.state=278,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=277,this.match(PLParser.COMMA)),this.state=280,this.match(PLParser.RPAREN),this.state=281,this.match(PLParser.ARROW),this.state=282,this.typeExpr();break;case 8:_localctx=new FunctionTypeNoArgContext(_localctx),this.enterOuterAlt(_localctx,8),this.state=284,this.match(PLParser.LPAREN),this.state=285,this.match(PLParser.RPAREN),this.state=286,this.match(PLParser.ARROW),this.state=287,this.typeExpr()}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}typeParameters(){let _la,_localctx=new TypeParametersContext(this._ctx,this.state);this.enterRule(_localctx,28,PLParser.RULE_typeParameters);try{for(this.enterOuterAlt(_localctx,1),this.state=290,this.match(PLParser.LT),this.state=291,this.typeExpr(),this.state=296,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.COMMA;)this.state=292,this.match(PLParser.COMMA),this.state=293,this.typeExpr(),this.state=298,this._errHandler.sync(this),_la=this._input.LA(1);this.state=299,this.match(PLParser.GT)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}annotatedVariable(){let _localctx=new AnnotatedVariableContext(this._ctx,this.state);this.enterRule(_localctx,30,PLParser.RULE_annotatedVariable);try{this.enterOuterAlt(_localctx,1),this.state=301,this.match(PLParser.LowerId),this.state=302,this.typeAnnotation()}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}optionallyAnnotatedParameter(){let _la,_localctx=new OptionallyAnnotatedParameterContext(this._ctx,this.state);this.enterRule(_localctx,32,PLParser.RULE_optionallyAnnotatedParameter);try{this.enterOuterAlt(_localctx,1),this.state=304,this.match(PLParser.LowerId),this.state=306,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COLON&&(this.state=305,this.typeAnnotation())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}typeAnnotation(){let _localctx=new TypeAnnotationContext(this._ctx,this.state);this.enterRule(_localctx,34,PLParser.RULE_typeAnnotation);try{this.enterOuterAlt(_localctx,1),this.state=308,this.match(PLParser.COLON),this.state=309,this.typeExpr()}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}patternToExpr(){let _localctx=new PatternToExprContext(this._ctx,this.state);this.enterRule(_localctx,36,PLParser.RULE_patternToExpr);try{this.enterOuterAlt(_localctx,1),this.state=311,this.match(PLParser.BAR),this.state=312,this.match(PLParser.UpperId),this.state=313,this.varOrWildCard(),this.state=315,this.match(PLParser.ARROW),this.state=316,this.expression(0)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}statementBlock(){let _la,_localctx=new StatementBlockContext(this._ctx,this.state);this.enterRule(_localctx,38,PLParser.RULE_statementBlock);try{for(this.enterOuterAlt(_localctx,1),this.state=318,this.match(PLParser.LBRACE),this.state=322,this._errHandler.sync(this),_la=this._input.LA(1);_la===PLParser.VAL;)this.state=319,this.statement(),this.state=324,this._errHandler.sync(this),_la=this._input.LA(1);this.state=326,this._errHandler.sync(this),_la=this._input.LA(1),(0==(_la-12&-32)&&0!=(1<<_la-12&(1<<PLParser.IF-12|1<<PLParser.MATCH-12|1<<PLParser.PANIC-12|1<<PLParser.TRUE-12|1<<PLParser.FALSE-12|1<<PLParser.THIS-12|1<<PLParser.STRING2INT-12|1<<PLParser.INT2STRING-12|1<<PLParser.PRINTLN-12|1<<PLParser.LPAREN-12|1<<PLParser.LBRACE-12))||0==(_la-44&-32)&&0!=(1<<_la-44&(1<<PLParser.LBRACKET-44|1<<PLParser.NOT-44|1<<PLParser.MINUS-44|1<<PLParser.LowerId-44|1<<PLParser.UpperId-44|1<<PLParser.MinInt-44|1<<PLParser.IntLiteral-44|1<<PLParser.StrLiteral-44)))&&(this.state=325,this.expression(0)),this.state=328,this.match(PLParser.RBRACE)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}statement(){let _la,_localctx=new StatementContext(this._ctx,this.state);this.enterRule(_localctx,40,PLParser.RULE_statement);try{_localctx=new ValStatementContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=330,this.match(PLParser.VAL),this.state=331,this.pattern(),this.state=333,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COLON&&(this.state=332,this.typeAnnotation()),this.state=335,this.match(PLParser.ASSIGN),this.state=336,this.expression(0),this.state=338,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.SEMICOLON&&(this.state=337,this.match(PLParser.SEMICOLON))}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}expression(_p){void 0===_p&&(_p=0);let _la,_parentctx=this._ctx,_parentState=this.state,_localctx=new ExpressionContext(this._ctx,_parentState),_prevctx=_localctx;this.enterRecursionRule(_localctx,42,PLParser.RULE_expression,_p);try{let _alt;switch(this.enterOuterAlt(_localctx,1),this.state=437,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,47,this._ctx)){case 1:_localctx=new NestedExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=341,this.match(PLParser.LPAREN),this.state=342,this.expression(0),this.state=343,this.match(PLParser.RPAREN);break;case 2:_localctx=new LiteralExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=345,this.literal();break;case 3:_localctx=new ThisExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=346,this.match(PLParser.THIS);break;case 4:_localctx=new VariableExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=347,this.match(PLParser.LowerId);break;case 5:_localctx=new ClassMemberExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=348,this.match(PLParser.UpperId),this.state=349,this.match(PLParser.DOT),this.state=350,this.match(PLParser.LowerId);break;case 6:_localctx=new TupleConstructorContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=351,this.match(PLParser.LBRACKET),this.state=352,this.expression(0),this.state=355,this._errHandler.sync(this),_alt=1;do{switch(_alt){case 1:this.state=353,this.match(PLParser.COMMA),this.state=354,this.expression(0);break;default:throw new NoViableAltException_1.NoViableAltException(this)}this.state=357,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,42,this._ctx)}while(2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER);this.state=360,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=359,this.match(PLParser.COMMA)),this.state=362,this.match(PLParser.RBRACKET);break;case 7:_localctx=new ObjConstructorContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=364,this.match(PLParser.LBRACE),this.state=365,this.objectFieldDeclarations(),this.state=366,this.match(PLParser.RBRACE);break;case 8:_localctx=new VariantConstructorContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=368,this.match(PLParser.UpperId),this.state=369,this.match(PLParser.LPAREN),this.state=370,this.expression(0),this.state=371,this.match(PLParser.RPAREN);break;case 9:_localctx=new StatementBlockExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=373,this.statementBlock();break;case 10:_localctx=new NegExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=374,this.match(PLParser.MINUS),this.state=375,this.expression(17);break;case 11:_localctx=new NotExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=376,this.match(PLParser.NOT),this.state=377,this.expression(16);break;case 12:_localctx=new PanicExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=378,this.match(PLParser.PANIC),this.state=379,this.match(PLParser.LPAREN),this.state=380,this.expression(0),this.state=381,this.match(PLParser.RPAREN);break;case 13:_localctx=new StringToIntExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=383,this.match(PLParser.STRING2INT),this.state=384,this.match(PLParser.LPAREN),this.state=385,this.expression(0),this.state=386,this.match(PLParser.RPAREN);break;case 14:_localctx=new IntToStringExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=388,this.match(PLParser.INT2STRING),this.state=389,this.match(PLParser.LPAREN),this.state=390,this.expression(0),this.state=391,this.match(PLParser.RPAREN);break;case 15:_localctx=new PrintLineExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=393,this.match(PLParser.PRINTLN),this.state=394,this.match(PLParser.LPAREN),this.state=395,this.expression(0),this.state=396,this.match(PLParser.RPAREN);break;case 16:_localctx=new IfElseExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=398,this.match(PLParser.IF),this.state=399,this.expression(0),this.state=400,this.match(PLParser.THEN),this.state=401,this.expression(0),this.state=402,this.match(PLParser.ELSE),this.state=403,this.expression(4);break;case 17:_localctx=new MatchExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=405,this.match(PLParser.MATCH),this.state=406,this.match(PLParser.LPAREN),this.state=407,this.expression(0),this.state=408,this.match(PLParser.RPAREN),this.state=409,this.match(PLParser.LBRACE),this.state=411,this._errHandler.sync(this),_la=this._input.LA(1);do{this.state=410,this.patternToExpr(),this.state=413,this._errHandler.sync(this),_la=this._input.LA(1)}while(_la===PLParser.BAR);this.state=415,this.match(PLParser.RBRACE);break;case 18:for(_localctx=new FunExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=417,this.match(PLParser.LPAREN),this.state=418,this.optionallyAnnotatedParameter(),this.state=423,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,45,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=419,this.match(PLParser.COMMA),this.state=420,this.optionallyAnnotatedParameter()),this.state=425,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,45,this._ctx);this.state=427,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=426,this.match(PLParser.COMMA)),this.state=429,this.match(PLParser.RPAREN),this.state=430,this.match(PLParser.ARROW),this.state=431,this.expression(2);break;case 19:_localctx=new NoArgFunExprContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=433,this.match(PLParser.LPAREN),this.state=434,this.match(PLParser.RPAREN),this.state=435,this.match(PLParser.ARROW),this.state=436,this.expression(1)}for(this._ctx._stop=this._input.tryLT(-1),this.state=467,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,49,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;){if(1===_alt)switch(null!=this._parseListeners&&this.triggerExitRuleEvent(),_prevctx=_localctx,this.state=465,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,48,this._ctx)){case 1:if(_localctx=new FactorExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=439,!this.precpred(this._ctx,10))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 10)");this.state=440,this.factorOperator(),this.state=441,this.expression(11);break;case 2:if(_localctx=new TermExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=443,!this.precpred(this._ctx,9))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 9)");this.state=444,this.termOperator(),this.state=445,this.expression(10);break;case 3:if(_localctx=new ComparisonExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=447,!this.precpred(this._ctx,8))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 8)");this.state=448,this.comparisonOperator(),this.state=449,this.expression(9);break;case 4:if(_localctx=new ConjunctionExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=451,!this.precpred(this._ctx,7))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 7)");this.state=452,this.match(PLParser.AND),this.state=453,this.expression(8);break;case 5:if(_localctx=new DisjunctionExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=454,!this.precpred(this._ctx,6))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 6)");this.state=455,this.match(PLParser.OR),this.state=456,this.expression(7);break;case 6:if(_localctx=new ConcatExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=457,!this.precpred(this._ctx,5))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 5)");this.state=458,this.match(PLParser.COLONCOLON),this.state=459,this.expression(6);break;case 7:if(_localctx=new FieldAccessExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=460,!this.precpred(this._ctx,18))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 18)");this.state=461,this.match(PLParser.DOT),this.state=462,this.match(PLParser.LowerId);break;case 8:if(_localctx=new FunctionApplicationExprContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,42,PLParser.RULE_expression),this.state=463,!this.precpred(this._ctx,11))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 11)");this.state=464,this.functionArguments()}this.state=469,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,49,this._ctx)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.unrollRecursionContexts(_parentctx)}return _localctx}objectFieldDeclarations(){let _la,_localctx=new ObjectFieldDeclarationsContext(this._ctx,this.state);this.enterRule(_localctx,44,PLParser.RULE_objectFieldDeclarations);try{let _alt;for(this.enterOuterAlt(_localctx,1),this.state=470,this.objectFieldDeclaration(),this.state=475,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,50,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=471,this.match(PLParser.COMMA),this.state=472,this.objectFieldDeclaration()),this.state=477,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,50,this._ctx);this.state=479,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=478,this.match(PLParser.COMMA))}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}objectFieldDeclaration(){let _localctx=new ObjectFieldDeclarationContext(this._ctx,this.state);this.enterRule(_localctx,46,PLParser.RULE_objectFieldDeclaration);try{switch(this.state=485,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,52,this._ctx)){case 1:_localctx=new NormalObjFieldDeclarationContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=481,this.match(PLParser.LowerId),this.state=482,this.match(PLParser.COLON),this.state=483,this.expression(0);break;case 2:_localctx=new ShorthandObjFieldDeclarationContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=484,this.match(PLParser.LowerId)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}functionArguments(){let _la,_localctx=new FunctionArgumentsContext(this._ctx,this.state);this.enterRule(_localctx,48,PLParser.RULE_functionArguments);try{let _alt;switch(this.state=503,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,55,this._ctx)){case 1:this.enterOuterAlt(_localctx,1),this.state=487,this.match(PLParser.LPAREN),this.state=488,this.match(PLParser.RPAREN);break;case 2:for(this.enterOuterAlt(_localctx,2),this.state=489,this.match(PLParser.LPAREN),this.state=490,this.expression(0),this.state=495,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,53,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=491,this.match(PLParser.COMMA),this.state=492,this.expression(0)),this.state=497,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,53,this._ctx);this.state=499,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=498,this.match(PLParser.COMMA)),this.state=501,this.match(PLParser.RPAREN)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}pattern(){let _la,_localctx=new PatternContext(this._ctx,this.state);this.enterRule(_localctx,50,PLParser.RULE_pattern);try{let _alt;switch(this.state=534,this._errHandler.sync(this),this._input.LA(1)){case PLParser.LBRACKET:_localctx=new TuplePatternContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=505,this.match(PLParser.LBRACKET),this.state=506,this.varOrWildCard(),this.state=509,this._errHandler.sync(this),_alt=1;do{switch(_alt){case 1:this.state=507,this.match(PLParser.COMMA),this.state=508,this.varOrWildCard();break;default:throw new NoViableAltException_1.NoViableAltException(this)}this.state=511,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,56,this._ctx)}while(2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER);this.state=514,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=513,this.match(PLParser.COMMA)),this.state=516,this.match(PLParser.RBRACKET);break;case PLParser.LBRACE:for(_localctx=new ObjectPatternContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=518,this.match(PLParser.LBRACE),this.state=519,this.varOrRenamedVar(),this.state=524,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,58,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;)1===_alt&&(this.state=520,this.match(PLParser.COMMA),this.state=521,this.varOrRenamedVar()),this.state=526,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,58,this._ctx);this.state=528,this._errHandler.sync(this),_la=this._input.LA(1),_la===PLParser.COMMA&&(this.state=527,this.match(PLParser.COMMA)),this.state=530,this.match(PLParser.RBRACE);break;case PLParser.LowerId:_localctx=new VariablePatternContext(_localctx),this.enterOuterAlt(_localctx,3),this.state=532,this.match(PLParser.LowerId);break;case PLParser.WILDCARD:_localctx=new WildcardPatternContext(_localctx),this.enterOuterAlt(_localctx,4),this.state=533,this.match(PLParser.WILDCARD);break;default:throw new NoViableAltException_1.NoViableAltException(this)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}varOrWildCard(){let _la,_localctx=new VarOrWildCardContext(this._ctx,this.state);this.enterRule(_localctx,52,PLParser.RULE_varOrWildCard);try{this.enterOuterAlt(_localctx,1),this.state=536,_la=this._input.LA(1),_la!==PLParser.WILDCARD&&_la!==PLParser.LowerId?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}varOrRenamedVar(){let _localctx=new VarOrRenamedVarContext(this._ctx,this.state);this.enterRule(_localctx,54,PLParser.RULE_varOrRenamedVar);try{switch(this.state=542,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,61,this._ctx)){case 1:_localctx=new RawVarContext(_localctx),this.enterOuterAlt(_localctx,1),this.state=538,this.match(PLParser.LowerId);break;case 2:_localctx=new RenamedVarContext(_localctx),this.enterOuterAlt(_localctx,2),this.state=539,this.match(PLParser.LowerId),this.state=540,this.match(PLParser.AS),this.state=541,this.match(PLParser.LowerId)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}factorOperator(){let _la,_localctx=new FactorOperatorContext(this._ctx,this.state);this.enterRule(_localctx,56,PLParser.RULE_factorOperator);try{this.enterOuterAlt(_localctx,1),this.state=544,_la=this._input.LA(1),0!=(_la-56&-32)||0==(1<<_la-56&(1<<PLParser.MUL-56|1<<PLParser.DIV-56|1<<PLParser.MOD-56))?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}termOperator(){let _la,_localctx=new TermOperatorContext(this._ctx,this.state);this.enterRule(_localctx,58,PLParser.RULE_termOperator);try{this.enterOuterAlt(_localctx,1),this.state=546,_la=this._input.LA(1),_la!==PLParser.PLUS&&_la!==PLParser.MINUS?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}comparisonOperator(){let _la,_localctx=new ComparisonOperatorContext(this._ctx,this.state);this.enterRule(_localctx,60,PLParser.RULE_comparisonOperator);try{this.enterOuterAlt(_localctx,1),this.state=548,_la=this._input.LA(1),0!=(_la-61&-32)||0==(1<<_la-61&(1<<PLParser.STRUCT_EQ-61|1<<PLParser.LT-61|1<<PLParser.LE-61|1<<PLParser.GT-61|1<<PLParser.GE-61|1<<PLParser.STRUCT_NE-61))?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}literal(){let _la,_localctx=new LiteralContext(this._ctx,this.state);this.enterRule(_localctx,62,PLParser.RULE_literal);try{this.enterOuterAlt(_localctx,1),this.state=550,_la=this._input.LA(1),_la===PLParser.TRUE||_la===PLParser.FALSE||0==(_la-72&-32)&&0!=(1<<_la-72&(1<<PLParser.MinInt-72|1<<PLParser.IntLiteral-72|1<<PLParser.StrLiteral-72))?(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()):this._errHandler.recoverInline(this)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}sempred(_localctx,ruleIndex,predIndex){switch(ruleIndex){case 21:return this.expression_sempred(_localctx,predIndex)}return!0}expression_sempred(_localctx,predIndex){switch(predIndex){case 0:return this.precpred(this._ctx,10);case 1:return this.precpred(this._ctx,9);case 2:return this.precpred(this._ctx,8);case 3:return this.precpred(this._ctx,7);case 4:return this.precpred(this._ctx,6);case 5:return this.precpred(this._ctx,5);case 6:return this.precpred(this._ctx,18);case 7:return this.precpred(this._ctx,11)}return!0}static get _ATN(){return PLParser.__ATN||(PLParser.__ATN=(new ATNDeserializer_1.ATNDeserializer).deserialize(Utils.toCharArray(PLParser._serializedATN))),PLParser.__ATN}}exports.PLParser=PLParser,PLParser.IMPORT=1,PLParser.FROM=2,PLParser.CLASS=3,PLParser.VAL=4,PLParser.FUNCTION=5,PLParser.METHOD=6,PLParser.AS=7,PLParser.PRIVATE=8,PLParser.PROTECTED=9,PLParser.INTERNAL=10,PLParser.PUBLIC=11,PLParser.IF=12,PLParser.THEN=13,PLParser.ELSE=14,PLParser.MATCH=15,PLParser.PANIC=16,PLParser.RETURN=17,PLParser.INT=18,PLParser.STRING=19,PLParser.BOOL=20,PLParser.UNIT=21,PLParser.TRUE=22,PLParser.FALSE=23,PLParser.THIS=24,PLParser.WILDCARD=25,PLParser.STRING2INT=26,PLParser.INT2STRING=27,PLParser.PRINTLN=28,PLParser.SELF=29,PLParser.CONST=30,PLParser.LET=31,PLParser.VAR=32,PLParser.TYPE=33,PLParser.INTERFACE=34,PLParser.FUNCTOR=35,PLParser.EXTENDS=36,PLParser.IMPLEMENTS=37,PLParser.EXPORT=38,PLParser.ASSERT=39,PLParser.LPAREN=40,PLParser.RPAREN=41,PLParser.LBRACE=42,PLParser.RBRACE=43,PLParser.LBRACKET=44,PLParser.RBRACKET=45,PLParser.QUESTION=46,PLParser.SEMICOLON=47,PLParser.COLON=48,PLParser.COLONCOLON=49,PLParser.COMMA=50,PLParser.DOT=51,PLParser.BAR=52,PLParser.ARROW=53,PLParser.ASSIGN=54,PLParser.NOT=55,PLParser.MUL=56,PLParser.DIV=57,PLParser.MOD=58,PLParser.PLUS=59,PLParser.MINUS=60,PLParser.STRUCT_EQ=61,PLParser.LT=62,PLParser.LE=63,PLParser.GT=64,PLParser.GE=65,PLParser.STRUCT_NE=66,PLParser.AND=67,PLParser.OR=68,PLParser.SPREAD=69,PLParser.LowerId=70,PLParser.UpperId=71,PLParser.MinInt=72,PLParser.IntLiteral=73,PLParser.StrLiteral=74,PLParser.HexLiteral=75,PLParser.DecimalLiteral=76,PLParser.OctalLiteral=77,PLParser.COMMENT=78,PLParser.WS=79,PLParser.LINE_COMMENT=80,PLParser.RULE_module=0,PLParser.RULE_importModuleMembers=1,PLParser.RULE_moduleReference=2,PLParser.RULE_moduleMember=3,PLParser.RULE_clazz=4,PLParser.RULE_interfaze=5,PLParser.RULE_classHeaderDeclaration=6,PLParser.RULE_classMemberDefinition=7,PLParser.RULE_classMemberDeclaration=8,PLParser.RULE_typeParametersDeclaration=9,PLParser.RULE_typeDeclaration=10,PLParser.RULE_objectTypeFieldDeclaration=11,PLParser.RULE_variantTypeConstructorDeclaration=12,PLParser.RULE_typeExpr=13,PLParser.RULE_typeParameters=14,PLParser.RULE_annotatedVariable=15,PLParser.RULE_optionallyAnnotatedParameter=16,PLParser.RULE_typeAnnotation=17,PLParser.RULE_patternToExpr=18,PLParser.RULE_statementBlock=19,PLParser.RULE_statement=20,PLParser.RULE_expression=21,PLParser.RULE_objectFieldDeclarations=22,PLParser.RULE_objectFieldDeclaration=23,PLParser.RULE_functionArguments=24,PLParser.RULE_pattern=25,PLParser.RULE_varOrWildCard=26,PLParser.RULE_varOrRenamedVar=27,PLParser.RULE_factorOperator=28,PLParser.RULE_termOperator=29,PLParser.RULE_comparisonOperator=30,PLParser.RULE_literal=31,PLParser.ruleNames=["module","importModuleMembers","moduleReference","moduleMember","clazz","interfaze","classHeaderDeclaration","classMemberDefinition","classMemberDeclaration","typeParametersDeclaration","typeDeclaration","objectTypeFieldDeclaration","variantTypeConstructorDeclaration","typeExpr","typeParameters","annotatedVariable","optionallyAnnotatedParameter","typeAnnotation","patternToExpr","statementBlock","statement","expression","objectFieldDeclarations","objectFieldDeclaration","functionArguments","pattern","varOrWildCard","varOrRenamedVar","factorOperator","termOperator","comparisonOperator","literal"],PLParser._LITERAL_NAMES=[void 0,"'import'","'from'","'class'","'val'","'function'","'method'","'as'","'private'","'protected'","'internal'","'public'","'if'","'then'","'else'","'match'","'panic'","'return'","'int'","'string'","'bool'","'unit'","'true'","'false'","'this'","'_'","'stringToInt'","'intToString'","'println'","'self'","'const'","'let'","'var'","'type'","'interface'","'functor'","'extends'","'implements'","'export'","'assert'","'('","')'","'{'","'}'","'['","']'","'?'","';'","':'","'::'","','","'.'","'|'","'->'","'='","'!'","'*'","'/'","'%'","'+'","'-'","'=='","'<'","'<='","'>'","'>='","'!='","'&&'","'||'","'...'",void 0,void 0,"'-9223372036854775808'"],PLParser._SYMBOLIC_NAMES=[void 0,"IMPORT","FROM","CLASS","VAL","FUNCTION","METHOD","AS","PRIVATE","PROTECTED","INTERNAL","PUBLIC","IF","THEN","ELSE","MATCH","PANIC","RETURN","INT","STRING","BOOL","UNIT","TRUE","FALSE","THIS","WILDCARD","STRING2INT","INT2STRING","PRINTLN","SELF","CONST","LET","VAR","TYPE","INTERFACE","FUNCTOR","EXTENDS","IMPLEMENTS","EXPORT","ASSERT","LPAREN","RPAREN","LBRACE","RBRACE","LBRACKET","RBRACKET","QUESTION","SEMICOLON","COLON","COLONCOLON","COMMA","DOT","BAR","ARROW","ASSIGN","NOT","MUL","DIV","MOD","PLUS","MINUS","STRUCT_EQ","LT","LE","GT","GE","STRUCT_NE","AND","OR","SPREAD","LowerId","UpperId","MinInt","IntLiteral","StrLiteral","HexLiteral","DecimalLiteral","OctalLiteral","COMMENT","WS","LINE_COMMENT"],PLParser.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(PLParser._LITERAL_NAMES,PLParser._SYMBOLIC_NAMES,[]),PLParser._serializedATNSegments=2,PLParser._serializedATNSegment0='줝쪺֍꾺体؇쉁Rȫ\t\t\t\t\t\t\b\t\b\t\t\t\n\t\n\v\t\v\f\t\f\r\t\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t !\t!D\n\fG\vJ\n\fM\vV\n\fY\vb\n\fe\vi\nn\n\fq\vv\n{\n\n\f\v\b\b\n\b\b\b\b\b\n\b\b\b\b\b\b\b\n\b\b\b\b\n\b\t\t\n\t\t\t\t\n\t\t\t\t\t\t\t¥\n\t\f\t\t¨\v\t\t\t«\n\t\t­\n\t\t\t\t\t²\n\t\t\t\t\n\n\n¹\n\n\n\n\n\n\n\nÀ\n\n\f\n\nÃ\v\n\n\nÆ\n\n\nÈ\n\n\n\n\n\nÍ\n\n\v\v\v\v\vÓ\n\v\f\v\vÖ\v\v\v\v\f\f\f\fÝ\n\f\f\f\fà\v\f\f\fã\n\f\f\f\f\fè\n\f\r\f\fé\f\fí\n\f\fï\n\f\r\rò\n\r\r\r\r\ră\nĉ\n\rĊē\n\fĖ\vę\nģ\nĩ\n\fĬ\vĵ\nŃ\n\fņ\vŉ\nŐ\nŕ\nŦ\n\rŧū\nƞ\n\rƟƨ\n\fƫ\vƮ\nƸ\nǔ\n\fǗ\vǜ\n\fǟ\vǢ\nǨ\nǰ\n\fǳ\vǶ\nǺ\nȀ\n\rȁȅ\nȍ\n\fȐ\vȓ\nș\nȡ\n  !!!,"\b\n\f "$&(*,.02468:<>@\b\bHH:<=>?DJLɧEP^\bh\nj\fu¶Îîñ÷ĢĤ į"Ĳ$Ķ&Ĺ(ŀ*Ō,Ʒ.ǘ0ǧ2ǹ4Ș6Ț8Ƞ:Ȣ<Ȥ>Ȧ@ȨBDCBDGECEFFKGEHJ\bIHJMKIKLLNMKNOOPQQR,RWIST4TVIUSVYWUWXXZYWZ[-[\\\\]]^cI_`5`bIa_becacddecfi\ngi\fhfhgi\tjk\bko,ln\tmlnqomopprqors-s\vtv\nutuvvwwx$xzIy{\vzyz{{||,}\n~}~-\r\nI\v*\f+\nI\n\t\v H ¬*¡¦ ¢£4£¥ ¤¢¥¨¦¤¦§§ª¨¦©«4ª©ª««­¬¡¬­­®®±+¯°2°²±¯±²²³³´8´µ,µ¶¸\b·¹\v¸·¸¹¹ºº»H»Ç*¼Á ½¾4¾À ¿½ÀÃÁ¿ÁÂÂÅÃÁÄÆ4ÅÄÅÆÆÈÇ¼ÇÈÈÉÉÌ+ÊË2ËÍÌÊÌÍÍÎÏ@ÏÔIÐÑ4ÑÓIÒÐÓÖÔÒÔÕÕ×ÖÔ×ØBØÙÞ\rÚÛ4ÛÝ\rÜÚÝàÞÜÞßßâàÞáã4âáâããïäçåæ4æèçåèééçéêêìëí4ìëìííïîÙîäïðò\nñðñòòóóôôõHõö$ö÷øIøù*ùúúû+ûüģýģþģÿģĀĂIāăĂāĂăăģĄą.ąĈĆć:ćĉĈĆĉĊĊĈĊċċČČč/čģĎď*ďĔĐđ4đēĒĐēĖĔĒĔĕĕĘĖĔėę4ĘėĘęęĚĚě+ěĜ7ĜĝĝģĞğ*ğĠ+Ġġ7ġģĢüĢýĢþĢÿĢĀĢĄĢĎĢĞģĤĥ@ĥĪĦħ4ħĩĨĦĩĬĪĨĪīīĭĬĪĭĮBĮįİHİı$ı!ĲĴHĳĵ$ĴĳĴĵĵ#Ķķ2ķĸĸ%Ĺĺ6ĺĻIĻļ6ļĽĽľ7ľĿ,Ŀ\'ŀń,ŁŃ*łŁŃņńłńŅŅňņńŇŉ,ňŇňŉŉŊŊŋ-ŋ)Ōōōŏ4ŎŐ$ŏŎŏŐŐőőŒ8ŒŔ,œŕ1ŔœŔŕŕ+Ŗŗ\bŗŘ*Řř,řŚ+ŚƸśƸ@!ŜƸŝƸHŞşIşŠ5ŠƸHšŢ.Ţť,ţŤ4ŤŦ,ťţŦŧŧťŧŨŨŪũū4ŪũŪūūŬŬŭ/ŭƸŮů,ůŰ.Űű-űƸŲųIųŴ*Ŵŵ,ŵŶ+ŶƸŷƸ(ŸŹ>ŹƸ,źŻ9ŻƸ,żŽŽž*žſ,ſƀ+ƀƸƁƂƂƃ*ƃƄ,Ƅƅ+ƅƸƆƇƇƈ*ƈƉ,ƉƊ+ƊƸƋƌƌƍ*ƍƎ,ƎƏ+ƏƸƐƑƑƒ,ƒƓƓƔ,ƔƕƕƖ,ƖƸƗƘƘƙ*ƙƚ,ƚƛ+ƛƝ,Ɯƞ&ƝƜƞƟƟƝƟƠƠơơƢ-ƢƸƣƤ*ƤƩ"ƥƦ4Ʀƨ"ƧƥƨƫƩƧƩƪƪƭƫƩƬƮ4ƭƬƭƮƮƯƯư+ưƱ7ƱƲ,ƲƸƳƴ*ƴƵ+Ƶƶ7ƶƸ,ƷŖƷśƷŜƷŝƷŞƷšƷŮƷŲƷŷƷŸƷźƷżƷƁƷƆƷƋƷƐƷƗƷƣƷƳƸǕƹƺ\f\fƺƻ:ƻƼ,\rƼǔƽƾ\f\vƾƿ<ƿǀ,\fǀǔǁǂ\f\nǂǃ> ǃǄ,\vǄǔǅǆ\f\tǆǇEǇǔ,\nǈǉ\f\bǉǊFǊǔ,\tǋǌ\fǌǍ3Ǎǔ,\bǎǏ\fǏǐ5ǐǔHǑǒ\f\rǒǔ2ǓƹǓƽǓǁǓǅǓǈǓǋǓǎǓǑǔǗǕǓǕǖǖ-ǗǕǘǝ0Ǚǚ4ǚǜ0ǛǙǜǟǝǛǝǞǞǡǟǝǠǢ4ǡǠǡǢǢ/ǣǤHǤǥ2ǥǨ,ǦǨHǧǣǧǦǨ1ǩǪ*ǪǺ+ǫǬ*ǬǱ,ǭǮ4Ǯǰ,ǯǭǰǳǱǯǱǲǲǵǳǱǴǶ4ǵǴǵǶǶǷǷǸ+ǸǺǹǩǹǫǺ3ǻǼ.Ǽǿ6ǽǾ4ǾȀ6ǿǽȀȁȁǿȁȂȂȄȃȅ4ȄȃȄȅȅȆȆȇ/ȇșȈȉ,ȉȎ8Ȋȋ4ȋȍ8ȌȊȍȐȎȌȎȏȏȒȐȎȑȓ4ȒȑȒȓȓȔȔȕ-ȕșȖșHȗșȘǻȘȈȘȖȘȗș5Țț\tț7ȜȡHȝȞHȞȟ\tȟȡHȠȜȠȝȡ9Ȣȣ\tȣ;Ȥȥ\tȥ=Ȧȧ\tȧ?Ȩȩ\tȩA@EKWchouz¦ª¬',PLParser._serializedATNSegment1="±¸ÁÅÇÌÔÞâéìîñĂĊĔĘĢĪĴńňŏŔŧŪƟƩƭƷǓǕǝǡǧǱǵǹȁȄȎȒȘȠ",PLParser._serializedATN=Utils.join([PLParser._serializedATNSegment0,PLParser._serializedATNSegment1],"");class ModuleContext extends ParserRuleContext_1.ParserRuleContext{EOF(){return this.getToken(PLParser.EOF,0)}importModuleMembers(i){return void 0===i?this.getRuleContexts(ImportModuleMembersContext):this.getRuleContext(i,ImportModuleMembersContext)}moduleMember(i){return void 0===i?this.getRuleContexts(ModuleMemberContext):this.getRuleContext(i,ModuleMemberContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_module}accept(visitor){return visitor.visitModule?visitor.visitModule(this):visitor.visitChildren(this)}}exports.ModuleContext=ModuleContext;class ImportModuleMembersContext extends ParserRuleContext_1.ParserRuleContext{IMPORT(){return this.getToken(PLParser.IMPORT,0)}LBRACE(){return this.getToken(PLParser.LBRACE,0)}UpperId(i){return void 0===i?this.getTokens(PLParser.UpperId):this.getToken(PLParser.UpperId,i)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}FROM(){return this.getToken(PLParser.FROM,0)}moduleReference(){return this.getRuleContext(0,ModuleReferenceContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_importModuleMembers}accept(visitor){return visitor.visitImportModuleMembers?visitor.visitImportModuleMembers(this):visitor.visitChildren(this)}}exports.ImportModuleMembersContext=ImportModuleMembersContext;class ModuleReferenceContext extends ParserRuleContext_1.ParserRuleContext{UpperId(i){return void 0===i?this.getTokens(PLParser.UpperId):this.getToken(PLParser.UpperId,i)}DOT(i){return void 0===i?this.getTokens(PLParser.DOT):this.getToken(PLParser.DOT,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_moduleReference}accept(visitor){return visitor.visitModuleReference?visitor.visitModuleReference(this):visitor.visitChildren(this)}}exports.ModuleReferenceContext=ModuleReferenceContext;class ModuleMemberContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_moduleMember}copyFrom(ctx){super.copyFrom(ctx)}}exports.ModuleMemberContext=ModuleMemberContext;class ClassAsModuleMemberContext extends ModuleMemberContext{clazz(){return this.getRuleContext(0,ClazzContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitClassAsModuleMember?visitor.visitClassAsModuleMember(this):visitor.visitChildren(this)}}exports.ClassAsModuleMemberContext=ClassAsModuleMemberContext;class InterfaceAsModuleMemberContext extends ModuleMemberContext{interfaze(){return this.getRuleContext(0,InterfazeContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitInterfaceAsModuleMember?visitor.visitInterfaceAsModuleMember(this):visitor.visitChildren(this)}}exports.InterfaceAsModuleMemberContext=InterfaceAsModuleMemberContext;class ClazzContext extends ParserRuleContext_1.ParserRuleContext{classHeaderDeclaration(){return this.getRuleContext(0,ClassHeaderDeclarationContext)}LBRACE(){return this.getToken(PLParser.LBRACE,0)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}classMemberDefinition(i){return void 0===i?this.getRuleContexts(ClassMemberDefinitionContext):this.getRuleContext(i,ClassMemberDefinitionContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_clazz}accept(visitor){return visitor.visitClazz?visitor.visitClazz(this):visitor.visitChildren(this)}}exports.ClazzContext=ClazzContext;class InterfazeContext extends ParserRuleContext_1.ParserRuleContext{INTERFACE(){return this.getToken(PLParser.INTERFACE,0)}UpperId(){return this.getToken(PLParser.UpperId,0)}LBRACE(){return this.getToken(PLParser.LBRACE,0)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}PRIVATE(){return this.tryGetToken(PLParser.PRIVATE,0)}typeParametersDeclaration(){return this.tryGetRuleContext(0,TypeParametersDeclarationContext)}classMemberDeclaration(i){return void 0===i?this.getRuleContexts(ClassMemberDeclarationContext):this.getRuleContext(i,ClassMemberDeclarationContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_interfaze}accept(visitor){return visitor.visitInterfaze?visitor.visitInterfaze(this):visitor.visitChildren(this)}}exports.InterfazeContext=InterfazeContext;class ClassHeaderDeclarationContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_classHeaderDeclaration}copyFrom(ctx){super.copyFrom(ctx)}}exports.ClassHeaderDeclarationContext=ClassHeaderDeclarationContext;class ClassHeaderContext extends ClassHeaderDeclarationContext{CLASS(){return this.getToken(PLParser.CLASS,0)}UpperId(){return this.getToken(PLParser.UpperId,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}typeDeclaration(){return this.getRuleContext(0,TypeDeclarationContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}PRIVATE(){return this.tryGetToken(PLParser.PRIVATE,0)}typeParametersDeclaration(){return this.tryGetRuleContext(0,TypeParametersDeclarationContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitClassHeader?visitor.visitClassHeader(this):visitor.visitChildren(this)}}exports.ClassHeaderContext=ClassHeaderContext;class UtilClassHeaderContext extends ClassHeaderDeclarationContext{CLASS(){return this.getToken(PLParser.CLASS,0)}UpperId(){return this.getToken(PLParser.UpperId,0)}PRIVATE(){return this.tryGetToken(PLParser.PRIVATE,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitUtilClassHeader?visitor.visitUtilClassHeader(this):visitor.visitChildren(this)}}exports.UtilClassHeaderContext=UtilClassHeaderContext;class ClassMemberDefinitionContext extends ParserRuleContext_1.ParserRuleContext{LowerId(){return this.getToken(PLParser.LowerId,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}ASSIGN(){return this.getToken(PLParser.ASSIGN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}FUNCTION(){return this.tryGetToken(PLParser.FUNCTION,0)}METHOD(){return this.tryGetToken(PLParser.METHOD,0)}PRIVATE(){return this.tryGetToken(PLParser.PRIVATE,0)}typeParametersDeclaration(){return this.tryGetRuleContext(0,TypeParametersDeclarationContext)}annotatedVariable(i){return void 0===i?this.getRuleContexts(AnnotatedVariableContext):this.getRuleContext(i,AnnotatedVariableContext)}COLON(){return this.tryGetToken(PLParser.COLON,0)}typeExpr(){return this.tryGetRuleContext(0,TypeExprContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_classMemberDefinition}accept(visitor){return visitor.visitClassMemberDefinition?visitor.visitClassMemberDefinition(this):visitor.visitChildren(this)}}exports.ClassMemberDefinitionContext=ClassMemberDefinitionContext;class ClassMemberDeclarationContext extends ParserRuleContext_1.ParserRuleContext{METHOD(){return this.getToken(PLParser.METHOD,0)}LowerId(){return this.getToken(PLParser.LowerId,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}typeParametersDeclaration(){return this.tryGetRuleContext(0,TypeParametersDeclarationContext)}annotatedVariable(i){return void 0===i?this.getRuleContexts(AnnotatedVariableContext):this.getRuleContext(i,AnnotatedVariableContext)}COLON(){return this.tryGetToken(PLParser.COLON,0)}typeExpr(){return this.tryGetRuleContext(0,TypeExprContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_classMemberDeclaration}accept(visitor){return visitor.visitClassMemberDeclaration?visitor.visitClassMemberDeclaration(this):visitor.visitChildren(this)}}exports.ClassMemberDeclarationContext=ClassMemberDeclarationContext;class TypeParametersDeclarationContext extends ParserRuleContext_1.ParserRuleContext{LT(){return this.getToken(PLParser.LT,0)}UpperId(i){return void 0===i?this.getTokens(PLParser.UpperId):this.getToken(PLParser.UpperId,i)}GT(){return this.getToken(PLParser.GT,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_typeParametersDeclaration}accept(visitor){return visitor.visitTypeParametersDeclaration?visitor.visitTypeParametersDeclaration(this):visitor.visitChildren(this)}}exports.TypeParametersDeclarationContext=TypeParametersDeclarationContext;class TypeDeclarationContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_typeDeclaration}copyFrom(ctx){super.copyFrom(ctx)}}exports.TypeDeclarationContext=TypeDeclarationContext;class ObjTypeContext extends TypeDeclarationContext{objectTypeFieldDeclaration(i){return void 0===i?this.getRuleContexts(ObjectTypeFieldDeclarationContext):this.getRuleContext(i,ObjectTypeFieldDeclarationContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitObjType?visitor.visitObjType(this):visitor.visitChildren(this)}}exports.ObjTypeContext=ObjTypeContext;class VariantTypeContext extends TypeDeclarationContext{variantTypeConstructorDeclaration(i){return void 0===i?this.getRuleContexts(VariantTypeConstructorDeclarationContext):this.getRuleContext(i,VariantTypeConstructorDeclarationContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitVariantType?visitor.visitVariantType(this):visitor.visitChildren(this)}}exports.VariantTypeContext=VariantTypeContext;class ObjectTypeFieldDeclarationContext extends ParserRuleContext_1.ParserRuleContext{VAL(){return this.getToken(PLParser.VAL,0)}LowerId(){return this.getToken(PLParser.LowerId,0)}typeAnnotation(){return this.getRuleContext(0,TypeAnnotationContext)}PRIVATE(){return this.tryGetToken(PLParser.PRIVATE,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_objectTypeFieldDeclaration}accept(visitor){return visitor.visitObjectTypeFieldDeclaration?visitor.visitObjectTypeFieldDeclaration(this):visitor.visitChildren(this)}}exports.ObjectTypeFieldDeclarationContext=ObjectTypeFieldDeclarationContext;class VariantTypeConstructorDeclarationContext extends ParserRuleContext_1.ParserRuleContext{UpperId(){return this.getToken(PLParser.UpperId,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}typeExpr(){return this.getRuleContext(0,TypeExprContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_variantTypeConstructorDeclaration}accept(visitor){return visitor.visitVariantTypeConstructorDeclaration?visitor.visitVariantTypeConstructorDeclaration(this):visitor.visitChildren(this)}}exports.VariantTypeConstructorDeclarationContext=VariantTypeConstructorDeclarationContext;class TypeExprContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_typeExpr}copyFrom(ctx){super.copyFrom(ctx)}}exports.TypeExprContext=TypeExprContext;class UnitTypeContext extends TypeExprContext{UNIT(){return this.getToken(PLParser.UNIT,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitUnitType?visitor.visitUnitType(this):visitor.visitChildren(this)}}exports.UnitTypeContext=UnitTypeContext;class IntTypeContext extends TypeExprContext{INT(){return this.getToken(PLParser.INT,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitIntType?visitor.visitIntType(this):visitor.visitChildren(this)}}exports.IntTypeContext=IntTypeContext;class StrTypeContext extends TypeExprContext{STRING(){return this.getToken(PLParser.STRING,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitStrType?visitor.visitStrType(this):visitor.visitChildren(this)}}exports.StrTypeContext=StrTypeContext;class BoolTypeContext extends TypeExprContext{BOOL(){return this.getToken(PLParser.BOOL,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitBoolType?visitor.visitBoolType(this):visitor.visitChildren(this)}}exports.BoolTypeContext=BoolTypeContext;class SingleIdentifierTypeContext extends TypeExprContext{UpperId(){return this.getToken(PLParser.UpperId,0)}typeParameters(){return this.tryGetRuleContext(0,TypeParametersContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitSingleIdentifierType?visitor.visitSingleIdentifierType(this):visitor.visitChildren(this)}}exports.SingleIdentifierTypeContext=SingleIdentifierTypeContext;class TupleTypeContext extends TypeExprContext{LBRACKET(){return this.getToken(PLParser.LBRACKET,0)}typeExpr(i){return void 0===i?this.getRuleContexts(TypeExprContext):this.getRuleContext(i,TypeExprContext)}RBRACKET(){return this.getToken(PLParser.RBRACKET,0)}MUL(i){return void 0===i?this.getTokens(PLParser.MUL):this.getToken(PLParser.MUL,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitTupleType?visitor.visitTupleType(this):visitor.visitChildren(this)}}exports.TupleTypeContext=TupleTypeContext;class FunctionTypeContext extends TypeExprContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}typeExpr(i){return void 0===i?this.getRuleContexts(TypeExprContext):this.getRuleContext(i,TypeExprContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}ARROW(){return this.getToken(PLParser.ARROW,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFunctionType?visitor.visitFunctionType(this):visitor.visitChildren(this)}}exports.FunctionTypeContext=FunctionTypeContext;class FunctionTypeNoArgContext extends TypeExprContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}ARROW(){return this.getToken(PLParser.ARROW,0)}typeExpr(){return this.getRuleContext(0,TypeExprContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFunctionTypeNoArg?visitor.visitFunctionTypeNoArg(this):visitor.visitChildren(this)}}exports.FunctionTypeNoArgContext=FunctionTypeNoArgContext;class TypeParametersContext extends ParserRuleContext_1.ParserRuleContext{LT(){return this.getToken(PLParser.LT,0)}typeExpr(i){return void 0===i?this.getRuleContexts(TypeExprContext):this.getRuleContext(i,TypeExprContext)}GT(){return this.getToken(PLParser.GT,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_typeParameters}accept(visitor){return visitor.visitTypeParameters?visitor.visitTypeParameters(this):visitor.visitChildren(this)}}exports.TypeParametersContext=TypeParametersContext;class AnnotatedVariableContext extends ParserRuleContext_1.ParserRuleContext{LowerId(){return this.getToken(PLParser.LowerId,0)}typeAnnotation(){return this.getRuleContext(0,TypeAnnotationContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_annotatedVariable}accept(visitor){return visitor.visitAnnotatedVariable?visitor.visitAnnotatedVariable(this):visitor.visitChildren(this)}}exports.AnnotatedVariableContext=AnnotatedVariableContext;class OptionallyAnnotatedParameterContext extends ParserRuleContext_1.ParserRuleContext{LowerId(){return this.getToken(PLParser.LowerId,0)}typeAnnotation(){return this.tryGetRuleContext(0,TypeAnnotationContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_optionallyAnnotatedParameter}accept(visitor){return visitor.visitOptionallyAnnotatedParameter?visitor.visitOptionallyAnnotatedParameter(this):visitor.visitChildren(this)}}exports.OptionallyAnnotatedParameterContext=OptionallyAnnotatedParameterContext;class TypeAnnotationContext extends ParserRuleContext_1.ParserRuleContext{COLON(){return this.getToken(PLParser.COLON,0)}typeExpr(){return this.getRuleContext(0,TypeExprContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_typeAnnotation}accept(visitor){return visitor.visitTypeAnnotation?visitor.visitTypeAnnotation(this):visitor.visitChildren(this)}}exports.TypeAnnotationContext=TypeAnnotationContext;class PatternToExprContext extends ParserRuleContext_1.ParserRuleContext{BAR(){return this.getToken(PLParser.BAR,0)}ARROW(){return this.getToken(PLParser.ARROW,0)}expression(){return this.getRuleContext(0,ExpressionContext)}UpperId(){return this.tryGetToken(PLParser.UpperId,0)}varOrWildCard(){return this.tryGetRuleContext(0,VarOrWildCardContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_patternToExpr}accept(visitor){return visitor.visitPatternToExpr?visitor.visitPatternToExpr(this):visitor.visitChildren(this)}}exports.PatternToExprContext=PatternToExprContext;class StatementBlockContext extends ParserRuleContext_1.ParserRuleContext{LBRACE(){return this.getToken(PLParser.LBRACE,0)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}statement(i){return void 0===i?this.getRuleContexts(StatementContext):this.getRuleContext(i,StatementContext)}expression(){return this.tryGetRuleContext(0,ExpressionContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_statementBlock}accept(visitor){return visitor.visitStatementBlock?visitor.visitStatementBlock(this):visitor.visitChildren(this)}}exports.StatementBlockContext=StatementBlockContext;class StatementContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_statement}copyFrom(ctx){super.copyFrom(ctx)}}exports.StatementContext=StatementContext;class ValStatementContext extends StatementContext{VAL(){return this.getToken(PLParser.VAL,0)}pattern(){return this.getRuleContext(0,PatternContext)}ASSIGN(){return this.getToken(PLParser.ASSIGN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}typeAnnotation(){return this.tryGetRuleContext(0,TypeAnnotationContext)}SEMICOLON(){return this.tryGetToken(PLParser.SEMICOLON,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitValStatement?visitor.visitValStatement(this):visitor.visitChildren(this)}}exports.ValStatementContext=ValStatementContext;class ExpressionContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_expression}copyFrom(ctx){super.copyFrom(ctx)}}exports.ExpressionContext=ExpressionContext;class NestedExprContext extends ExpressionContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitNestedExpr?visitor.visitNestedExpr(this):visitor.visitChildren(this)}}exports.NestedExprContext=NestedExprContext;class LiteralExprContext extends ExpressionContext{literal(){return this.getRuleContext(0,LiteralContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitLiteralExpr?visitor.visitLiteralExpr(this):visitor.visitChildren(this)}}exports.LiteralExprContext=LiteralExprContext;class ThisExprContext extends ExpressionContext{THIS(){return this.getToken(PLParser.THIS,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitThisExpr?visitor.visitThisExpr(this):visitor.visitChildren(this)}}exports.ThisExprContext=ThisExprContext;class VariableExprContext extends ExpressionContext{LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitVariableExpr?visitor.visitVariableExpr(this):visitor.visitChildren(this)}}exports.VariableExprContext=VariableExprContext;class ClassMemberExprContext extends ExpressionContext{UpperId(){return this.getToken(PLParser.UpperId,0)}DOT(){return this.getToken(PLParser.DOT,0)}LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitClassMemberExpr?visitor.visitClassMemberExpr(this):visitor.visitChildren(this)}}exports.ClassMemberExprContext=ClassMemberExprContext;class TupleConstructorContext extends ExpressionContext{LBRACKET(){return this.getToken(PLParser.LBRACKET,0)}expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}RBRACKET(){return this.getToken(PLParser.RBRACKET,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitTupleConstructor?visitor.visitTupleConstructor(this):visitor.visitChildren(this)}}exports.TupleConstructorContext=TupleConstructorContext;class ObjConstructorContext extends ExpressionContext{LBRACE(){return this.getToken(PLParser.LBRACE,0)}objectFieldDeclarations(){return this.getRuleContext(0,ObjectFieldDeclarationsContext)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitObjConstructor?visitor.visitObjConstructor(this):visitor.visitChildren(this)}}exports.ObjConstructorContext=ObjConstructorContext;class VariantConstructorContext extends ExpressionContext{UpperId(){return this.getToken(PLParser.UpperId,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitVariantConstructor?visitor.visitVariantConstructor(this):visitor.visitChildren(this)}}exports.VariantConstructorContext=VariantConstructorContext;class StatementBlockExprContext extends ExpressionContext{statementBlock(){return this.getRuleContext(0,StatementBlockContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitStatementBlockExpr?visitor.visitStatementBlockExpr(this):visitor.visitChildren(this)}}exports.StatementBlockExprContext=StatementBlockExprContext;class FieldAccessExprContext extends ExpressionContext{expression(){return this.getRuleContext(0,ExpressionContext)}DOT(){return this.getToken(PLParser.DOT,0)}LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFieldAccessExpr?visitor.visitFieldAccessExpr(this):visitor.visitChildren(this)}}exports.FieldAccessExprContext=FieldAccessExprContext;class NegExprContext extends ExpressionContext{MINUS(){return this.getToken(PLParser.MINUS,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitNegExpr?visitor.visitNegExpr(this):visitor.visitChildren(this)}}exports.NegExprContext=NegExprContext;class NotExprContext extends ExpressionContext{NOT(){return this.getToken(PLParser.NOT,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitNotExpr?visitor.visitNotExpr(this):visitor.visitChildren(this)}}exports.NotExprContext=NotExprContext;class PanicExprContext extends ExpressionContext{PANIC(){return this.getToken(PLParser.PANIC,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitPanicExpr?visitor.visitPanicExpr(this):visitor.visitChildren(this)}}exports.PanicExprContext=PanicExprContext;class StringToIntExprContext extends ExpressionContext{STRING2INT(){return this.getToken(PLParser.STRING2INT,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitStringToIntExpr?visitor.visitStringToIntExpr(this):visitor.visitChildren(this)}}exports.StringToIntExprContext=StringToIntExprContext;class IntToStringExprContext extends ExpressionContext{INT2STRING(){return this.getToken(PLParser.INT2STRING,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitIntToStringExpr?visitor.visitIntToStringExpr(this):visitor.visitChildren(this)}}exports.IntToStringExprContext=IntToStringExprContext;class PrintLineExprContext extends ExpressionContext{PRINTLN(){return this.getToken(PLParser.PRINTLN,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitPrintLineExpr?visitor.visitPrintLineExpr(this):visitor.visitChildren(this)}}exports.PrintLineExprContext=PrintLineExprContext;class FunctionApplicationExprContext extends ExpressionContext{expression(){return this.getRuleContext(0,ExpressionContext)}functionArguments(){return this.getRuleContext(0,FunctionArgumentsContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFunctionApplicationExpr?visitor.visitFunctionApplicationExpr(this):visitor.visitChildren(this)}}exports.FunctionApplicationExprContext=FunctionApplicationExprContext;class FactorExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}factorOperator(){return this.getRuleContext(0,FactorOperatorContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFactorExpr?visitor.visitFactorExpr(this):visitor.visitChildren(this)}}exports.FactorExprContext=FactorExprContext;class TermExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}termOperator(){return this.getRuleContext(0,TermOperatorContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitTermExpr?visitor.visitTermExpr(this):visitor.visitChildren(this)}}exports.TermExprContext=TermExprContext;class ComparisonExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}comparisonOperator(){return this.getRuleContext(0,ComparisonOperatorContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitComparisonExpr?visitor.visitComparisonExpr(this):visitor.visitChildren(this)}}exports.ComparisonExprContext=ComparisonExprContext;class ConjunctionExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}AND(){return this.getToken(PLParser.AND,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitConjunctionExpr?visitor.visitConjunctionExpr(this):visitor.visitChildren(this)}}exports.ConjunctionExprContext=ConjunctionExprContext;class DisjunctionExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}OR(){return this.getToken(PLParser.OR,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitDisjunctionExpr?visitor.visitDisjunctionExpr(this):visitor.visitChildren(this)}}exports.DisjunctionExprContext=DisjunctionExprContext;class ConcatExprContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}COLONCOLON(){return this.getToken(PLParser.COLONCOLON,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitConcatExpr?visitor.visitConcatExpr(this):visitor.visitChildren(this)}}exports.ConcatExprContext=ConcatExprContext;class IfElseExprContext extends ExpressionContext{IF(){return this.getToken(PLParser.IF,0)}expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}THEN(){return this.getToken(PLParser.THEN,0)}ELSE(){return this.getToken(PLParser.ELSE,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitIfElseExpr?visitor.visitIfElseExpr(this):visitor.visitChildren(this)}}exports.IfElseExprContext=IfElseExprContext;class MatchExprContext extends ExpressionContext{MATCH(){return this.getToken(PLParser.MATCH,0)}LPAREN(){return this.getToken(PLParser.LPAREN,0)}expression(){return this.getRuleContext(0,ExpressionContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}LBRACE(){return this.getToken(PLParser.LBRACE,0)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}patternToExpr(i){return void 0===i?this.getRuleContexts(PatternToExprContext):this.getRuleContext(i,PatternToExprContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitMatchExpr?visitor.visitMatchExpr(this):visitor.visitChildren(this)}}exports.MatchExprContext=MatchExprContext;class FunExprContext extends ExpressionContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}optionallyAnnotatedParameter(i){return void 0===i?this.getRuleContexts(OptionallyAnnotatedParameterContext):this.getRuleContext(i,OptionallyAnnotatedParameterContext)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}ARROW(){return this.getToken(PLParser.ARROW,0)}expression(){return this.getRuleContext(0,ExpressionContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitFunExpr?visitor.visitFunExpr(this):visitor.visitChildren(this)}}exports.FunExprContext=FunExprContext;class NoArgFunExprContext extends ExpressionContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}ARROW(){return this.getToken(PLParser.ARROW,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitNoArgFunExpr?visitor.visitNoArgFunExpr(this):visitor.visitChildren(this)}}exports.NoArgFunExprContext=NoArgFunExprContext;class ObjectFieldDeclarationsContext extends ParserRuleContext_1.ParserRuleContext{objectFieldDeclaration(i){return void 0===i?this.getRuleContexts(ObjectFieldDeclarationContext):this.getRuleContext(i,ObjectFieldDeclarationContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_objectFieldDeclarations}accept(visitor){return visitor.visitObjectFieldDeclarations?visitor.visitObjectFieldDeclarations(this):visitor.visitChildren(this)}}exports.ObjectFieldDeclarationsContext=ObjectFieldDeclarationsContext;class ObjectFieldDeclarationContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_objectFieldDeclaration}copyFrom(ctx){super.copyFrom(ctx)}}exports.ObjectFieldDeclarationContext=ObjectFieldDeclarationContext;class NormalObjFieldDeclarationContext extends ObjectFieldDeclarationContext{LowerId(){return this.getToken(PLParser.LowerId,0)}COLON(){return this.getToken(PLParser.COLON,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitNormalObjFieldDeclaration?visitor.visitNormalObjFieldDeclaration(this):visitor.visitChildren(this)}}exports.NormalObjFieldDeclarationContext=NormalObjFieldDeclarationContext;class ShorthandObjFieldDeclarationContext extends ObjectFieldDeclarationContext{LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitShorthandObjFieldDeclaration?visitor.visitShorthandObjFieldDeclaration(this):visitor.visitChildren(this)}}exports.ShorthandObjFieldDeclarationContext=ShorthandObjFieldDeclarationContext;class FunctionArgumentsContext extends ParserRuleContext_1.ParserRuleContext{LPAREN(){return this.getToken(PLParser.LPAREN,0)}RPAREN(){return this.getToken(PLParser.RPAREN,0)}expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_functionArguments}accept(visitor){return visitor.visitFunctionArguments?visitor.visitFunctionArguments(this):visitor.visitChildren(this)}}exports.FunctionArgumentsContext=FunctionArgumentsContext;class PatternContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_pattern}copyFrom(ctx){super.copyFrom(ctx)}}exports.PatternContext=PatternContext;class TuplePatternContext extends PatternContext{LBRACKET(){return this.getToken(PLParser.LBRACKET,0)}varOrWildCard(i){return void 0===i?this.getRuleContexts(VarOrWildCardContext):this.getRuleContext(i,VarOrWildCardContext)}RBRACKET(){return this.getToken(PLParser.RBRACKET,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitTuplePattern?visitor.visitTuplePattern(this):visitor.visitChildren(this)}}exports.TuplePatternContext=TuplePatternContext;class ObjectPatternContext extends PatternContext{LBRACE(){return this.getToken(PLParser.LBRACE,0)}varOrRenamedVar(i){return void 0===i?this.getRuleContexts(VarOrRenamedVarContext):this.getRuleContext(i,VarOrRenamedVarContext)}RBRACE(){return this.getToken(PLParser.RBRACE,0)}COMMA(i){return void 0===i?this.getTokens(PLParser.COMMA):this.getToken(PLParser.COMMA,i)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitObjectPattern?visitor.visitObjectPattern(this):visitor.visitChildren(this)}}exports.ObjectPatternContext=ObjectPatternContext;class VariablePatternContext extends PatternContext{LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitVariablePattern?visitor.visitVariablePattern(this):visitor.visitChildren(this)}}exports.VariablePatternContext=VariablePatternContext;class WildcardPatternContext extends PatternContext{WILDCARD(){return this.getToken(PLParser.WILDCARD,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitWildcardPattern?visitor.visitWildcardPattern(this):visitor.visitChildren(this)}}exports.WildcardPatternContext=WildcardPatternContext;class VarOrWildCardContext extends ParserRuleContext_1.ParserRuleContext{LowerId(){return this.tryGetToken(PLParser.LowerId,0)}WILDCARD(){return this.tryGetToken(PLParser.WILDCARD,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_varOrWildCard}accept(visitor){return visitor.visitVarOrWildCard?visitor.visitVarOrWildCard(this):visitor.visitChildren(this)}}exports.VarOrWildCardContext=VarOrWildCardContext;class VarOrRenamedVarContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_varOrRenamedVar}copyFrom(ctx){super.copyFrom(ctx)}}exports.VarOrRenamedVarContext=VarOrRenamedVarContext;class RawVarContext extends VarOrRenamedVarContext{LowerId(){return this.getToken(PLParser.LowerId,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitRawVar?visitor.visitRawVar(this):visitor.visitChildren(this)}}exports.RawVarContext=RawVarContext;class RenamedVarContext extends VarOrRenamedVarContext{LowerId(i){return void 0===i?this.getTokens(PLParser.LowerId):this.getToken(PLParser.LowerId,i)}AS(){return this.getToken(PLParser.AS,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}accept(visitor){return visitor.visitRenamedVar?visitor.visitRenamedVar(this):visitor.visitChildren(this)}}exports.RenamedVarContext=RenamedVarContext;class FactorOperatorContext extends ParserRuleContext_1.ParserRuleContext{MUL(){return this.tryGetToken(PLParser.MUL,0)}DIV(){return this.tryGetToken(PLParser.DIV,0)}MOD(){return this.tryGetToken(PLParser.MOD,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_factorOperator}accept(visitor){return visitor.visitFactorOperator?visitor.visitFactorOperator(this):visitor.visitChildren(this)}}exports.FactorOperatorContext=FactorOperatorContext;class TermOperatorContext extends ParserRuleContext_1.ParserRuleContext{PLUS(){return this.tryGetToken(PLParser.PLUS,0)}MINUS(){return this.tryGetToken(PLParser.MINUS,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_termOperator}accept(visitor){return visitor.visitTermOperator?visitor.visitTermOperator(this):visitor.visitChildren(this)}}exports.TermOperatorContext=TermOperatorContext;class ComparisonOperatorContext extends ParserRuleContext_1.ParserRuleContext{LT(){return this.tryGetToken(PLParser.LT,0)}LE(){return this.tryGetToken(PLParser.LE,0)}GT(){return this.tryGetToken(PLParser.GT,0)}GE(){return this.tryGetToken(PLParser.GE,0)}STRUCT_EQ(){return this.tryGetToken(PLParser.STRUCT_EQ,0)}STRUCT_NE(){return this.tryGetToken(PLParser.STRUCT_NE,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_comparisonOperator}accept(visitor){return visitor.visitComparisonOperator?visitor.visitComparisonOperator(this):visitor.visitChildren(this)}}exports.ComparisonOperatorContext=ComparisonOperatorContext;class LiteralContext extends ParserRuleContext_1.ParserRuleContext{TRUE(){return this.tryGetToken(PLParser.TRUE,0)}FALSE(){return this.tryGetToken(PLParser.FALSE,0)}MinInt(){return this.tryGetToken(PLParser.MinInt,0)}IntLiteral(){return this.tryGetToken(PLParser.IntLiteral,0)}StrLiteral(){return this.tryGetToken(PLParser.StrLiteral,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return PLParser.RULE_literal}accept(visitor){return visitor.visitLiteral?visitor.visitLiteral(this):visitor.visitChildren(this)}}exports.LiteralContext=LiteralContext;