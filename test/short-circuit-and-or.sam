class Main {
  function printAndReturn(b: bool, i: int): bool = {
    val _: unit = println(intToString(i));
    b
  }

  function printlnBool(b: bool): unit = if (b) then println("true") else println("false")

  function testAndShortCircuitInExpression(): unit = {
    val b1: bool = Main.printAndReturn(true, 0) && Main.printAndReturn(false, 1);
    val _: unit = Main.printlnBool(b1);
    val b2: bool = Main.printAndReturn(true, 0) && Main.printAndReturn(true, 1);
    val _: unit = Main.printlnBool(b2);
    val b3: bool = Main.printAndReturn(false, 0) && Main.printAndReturn(false, 1);
    val _: unit = Main.printlnBool(b3);
    val b4: bool = Main.printAndReturn(false, 0) && Main.printAndReturn(true, 1);
    val _: unit = Main.printlnBool(b4);
  }

  function testOrShortCircuitInExpression(): unit = {
    val b1: bool = Main.printAndReturn(true, 0) || Main.printAndReturn(false, 1);
    val _: unit = Main.printlnBool(b1);
    val b2: bool = Main.printAndReturn(true, 0) || Main.printAndReturn(true, 1);
    val _: unit = Main.printlnBool(b2);
    val b3: bool = Main.printAndReturn(false, 0) || Main.printAndReturn(false, 1);
    val _: unit = Main.printlnBool(b3);
    val b4: bool = Main.printAndReturn(false, 0) || Main.printAndReturn(true, 1);
    val _: unit = Main.printlnBool(b4);
  }

  function testAndShortCircuitInIf(): unit = {
    val _: unit = if (Main.printAndReturn(true, 0) && Main.printAndReturn(false, 1)) then panic(
      "Ah"
    ) else ({  });
    val _: unit = if (Main.printAndReturn(true, 0) && Main.printAndReturn(true, 1)) then (
      {  }
    ) else panic("Ah");
    val _: unit = if (Main.printAndReturn(false, 0) && Main.printAndReturn(false, 1)) then panic(
      "Ah"
    ) else ({  });
    val _: unit = if (Main.printAndReturn(false, 0) && Main.printAndReturn(true, 1)) then panic(
      "Ah"
    ) else ({  });
  }

  function testOrShortCircuitInIf(): unit = {
    val _: unit = if (Main.printAndReturn(true, 0) || Main.printAndReturn(false, 1)) then (
      {  }
    ) else panic("Ah");
    val _: unit = if (Main.printAndReturn(true, 0) || Main.printAndReturn(true, 1)) then (
      {  }
    ) else panic("Ah");
    val _: unit = if (Main.printAndReturn(false, 0) || Main.printAndReturn(false, 1)) then panic(
      "Ah"
    ) else ({  });
    val _: unit = if (Main.printAndReturn(false, 0) || Main.printAndReturn(true, 1)) then (
      {  }
    ) else panic("Ah");
  }

  function main(): unit = {
    val _: unit = Main.testAndShortCircuitInExpression();
    val _: unit = Main.testOrShortCircuitInExpression();
    val _: unit = Main.testAndShortCircuitInIf();
    val _: unit = Main.testOrShortCircuitInIf();
  }

}
