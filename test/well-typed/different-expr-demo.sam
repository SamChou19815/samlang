// ERROR_COUNT: 0

class Foo(val a: int) {
    function bar(): int = 3
}

class Option<T>(None(unit), Some(T)) {
    function matchExample(opt: Option<int>): int =
        match (opt) {
            | None _ -> 42
            | Some a -> a
        }
}

class Obj(val d: int, val e: int) {
    function valExample(): int = {
        val a: int = 1;
        val b = 2;
        val [_, c] = ["dd", 3]; // c = 3
        val { e as d } = { d: 5, e: 4 }; // d = 4
        val _ = 42;
        // 1 + 2 * 3 / 4 = 1 + 6/4 = 1 + 1 = 2
        a + b * c / d
    }
}

class Main {
    function identity(a: int): int = a

    function random(): int = {
        val a = 42; // very random
        a
    }

    function oof(): int = 14

    function div(a: int, b: int): int =
        if b == 0 then (
            panic("Division by zero is illegal!")
        ) else (
            a / b
        )

    function nestedVal(): int = {
        val a = {
            val b = 4;
            val c = {
                val c = b;
                b
            }; // c = 4
            c
        }; // 4
        val [e, b, _] = [1, "bool", true];
        a + 1 // 5
    }

    function main(): int = Main.identity(
        Foo.bar() * Main.oof() * Obj.valExample() / Main.div(4, 2) + Main.nestedVal() - 5
    )
}
