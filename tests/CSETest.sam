import { ForTests } from tests.StdLib;

class CSETest {
  private function test1(a: int, b: int, c: int, d: int, e: int): unit = {
    let _ = ForTests.assertIntEquals(c, a * b + a + (a * b + a));
    let _ = ForTests.assertIntEquals(d, a * b);
    let _ = ForTests.assertIntEquals(e, a * b + a);
  }

  private function test2(first: bool, a: int, b: int, aTimesB: int): unit = {
    let t = if first { a * b } else { a * b };
    ForTests.assertIntEquals(aTimesB, a * b)
  }

  private function log(x: int, b: int): int =
    if x <= 0 {
      0
    } else if x <= b {
      1
    } else if x <= b * b {
      2
    } else if x <= b * b * b {
      3
    } else if x <= b * b * b * b {
      4
    } else if x <= b * b * b * b * b {
      5
    } else if x <= b * b * b * b * b * b {
      6
    } else if x <= b * b * b * b * b * b * b {
      7
    } else if x <= b * b * b * b * b * b * b * b {
      8
    } else if x <= b * b * b * b * b * b * b * b * b {
      9
    } else if x <= b * b * b * b * b * b * b * b * b * b {
      10
    } else {
      10 + CSETest.log(x / (b * b * b * b * b * b * b * b * b * b), b)
    }

  private function plusLog2(acc: int, i: int): int = acc + CSETest.log(i, 2)

  private function test3(acc: int, i: int): int =
    if i >= 300 { acc } else { CSETest.test3(acc + CSETest.log(i, 2), i + 1) }

  private function test4(totalPicograms: int, i: int): int = {
    let maxLong = 92233720;
    if i >= 300 {
      totalPicograms
    } else {
      let megagrams = maxLong - i;
      let kilograms = megagrams / 1000;
      let grams = megagrams / 1000 / 1000;
      let milligrams = megagrams / 1000 / 1000 / 1000;
      CSETest.test4(kilograms + grams + milligrams, i + 1)
    }
  }

  private function test5(totalOddNumbers: int, i: int): int = {
    if i >= 300 {
      totalOddNumbers
    } else {
      let iMod64: int = i % 64;
      let iMod32: int = i % 64 % 32;
      let iMod16: int = i % 64 % 32 % 16;
      let iMod8: int = i % 64 % 32 % 16 % 8;
      let iMod4: int = i % 64 % 32 % 16 % 8 % 4;
      let iMod2: int = i % 64 % 32 % 16 % 8 % 4 % 2;
      CSETest.test5(totalOddNumbers + iMod2, i + 1)
    }
  }

  private function test6(first: bool, a: int, b: int, aTimesB: int): unit = {
    let _ = if first { let _ = a * b; } else {  };
    let _ = ForTests.assertIntEquals(aTimesB, a * b);
  }

  function run(): unit = {
    let _ = CSETest.test1(3, 4, 30, 12, 15);
    let _ = CSETest.test2(true, 3, 4, 12);
    let _ = CSETest.test2(false, 3, 4, 12);
    let _ = ForTests.assertIntEquals(2181, CSETest.test3(0, 0));
    let _ = ForTests.assertIntEquals(92325, CSETest.test4(0, 0));
    let _ = ForTests.assertIntEquals(150, CSETest.test5(0, 0));
    let _ = CSETest.test6(true, 3, 4, 12);
    let _ = CSETest.test6(false, 3, 4, 12);
  }
}
