import { ForTests } from tests.StdLib;

class MathFunctions {
  private function factorial(n: int): int =
    if n == 0 { 1 } else { MathFunctions.factorial(n - 1) * n }

  private function fib(n: int): int =
    if n == 0 {
      0
    } else if n == 1 {
      1
    } else {
      MathFunctions.fib(n - 2) + MathFunctions.fib(n - 1)
    }

  private function uselessRecursion(n: int): unit =
    if n == 0 {  } else { MathFunctions.uselessRecursion(n - 1) }

  private function isEven(n: int): bool = if n == 0 { true } else { MathFunctions.isOdd(n - 1) }

  private function isOdd(n: int): bool = if n == 0 { false } else { MathFunctions.isEven(n - 1) }

  function mutuallyRecursiveTest(): unit =
    if !MathFunctions.isEven(3) && MathFunctions.isOdd(3) {  } else { Process.panic("BAD") }

  function run(): unit = {
    let _ = ForTests.assertIntEquals(24, MathFunctions.factorial(4));
    let _ = ForTests.assertIntEquals(55, MathFunctions.fib(10));
    let _ = MathFunctions.uselessRecursion(20);
    let _ = MathFunctions.mutuallyRecursiveTest();
  }
}
