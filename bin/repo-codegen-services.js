module.exports=(()=>{"use strict";var t={272:(t,e)=>{Object.defineProperty(e,"__esModule",{value:true});e.githubActionWorkflowToString=e.githubActionJobRunStep=e.githubActionJobActionStep=void 0;e.githubActionJobActionStep=((t,e={})=>({type:"use-action",actionName:t,actionArguments:e}));e.githubActionJobRunStep=((t,e)=>({type:"run",stepName:t,command:e}));const n=t=>{switch(t.type){case"use-action":{const e=`${" ".repeat(6)}- uses: ${t.actionName}\n`;if(Object.keys(t.actionArguments).length===0){return e}const n=Object.entries(t.actionArguments).map(([t,e])=>`${" ".repeat(10)}${t}: "${e}"`).join("\n");return`${e}${" ".repeat(8)}with:\n${n}\n`}case"run":{return`${" ".repeat(6)}- name: ${t.stepName}\n${" ".repeat(8)}run: ${t.command}\n`}}};const o=([t,e])=>{return`  ${t}:\n    runs-on: ubuntu-latest\n    steps:\n${e.map(n).join("")}`};const r=t=>{if(t==null){return`on:\n  push:\n    branches:\n      - master\n  pull_request:`}return`on:\n  push:\n    paths:\n${t.map(t=>`${" ".repeat(6)}- '${t}'`).join("\n")}\n    branches:\n      - master`};e.githubActionWorkflowToString=(t=>{const e=`# @${"generated"}\n\nname: ${t.workflowName}\n${r(t.workflowMasterBranchOnlyTriggerPaths)}\n\njobs:\n${t.workflowJobs.map(o).join("")}`;return e})},202:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:true});const o=n(747);const r=n(622);const i=n(272);const a=[i.githubActionJobActionStep("actions/checkout@v2",{"fetch-depth":"2"}),i.githubActionJobActionStep("actions/setup-node@v2-beta"),i.githubActionJobActionStep("actions/cache@v2",{path:".yarn/cache\\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"}),i.githubActionJobRunStep("Yarn Install","yarn install --immutable")];const u=(t,e,n)=>{var i,a;return((a=(i=JSON.parse(o.readFileSync(r.join(t.information[e].workspaceLocation,"package.json")).toString()))===null||i===void 0?void 0:i.scripts)===null||a===void 0?void 0:a[n])!=null};const s={name:"GitHub Actions Workflows Codegen",run:()=>{const t=JSON.parse(o.readFileSync("workspaces.json").toString());return[{outputFilename:".github/workflows/generated-general.yml",outputContent:i.githubActionWorkflowToString({workflowName:"General",workflowJobs:[["lint",[...a,i.githubActionJobRunStep("Format Check","yarn format:check"),i.githubActionJobRunStep("Lint","yarn lint")]],["build",[...a,i.githubActionJobRunStep("Build","yarn compile")]],["validate",[...a,i.githubActionJobRunStep("Check Codegen","yarn codegen"),i.githubActionJobRunStep("Check changed","if [[ `git status --porcelain` ]]; then exit 1; fi")]],["test",[...a,i.githubActionJobRunStep("Test","yarn test")]]]})},...t.topologicallyOrdered.filter(e=>u(t,e,"deploy")).map(e=>{const n=`cd-${e}`;return{outputFilename:`.github/workflows/generated-${n}.yml`,outputContent:i.githubActionWorkflowToString({workflowName:`CD ${e}`,workflowMasterBranchOnlyTriggerPaths:[...t.information[e].dependencyChain.map(e=>`${t.information[e].workspaceLocation}/**`),"configuration/**",`.github/workflows/generated-*-${e}.yml`],workflowJobs:[["deploy",[...a,i.githubActionJobRunStep("Build",`yarn workspace ${e} build`),i.githubActionJobRunStep("Install firebase","sudo npm install -g firebase-tools"),i.githubActionJobRunStep("Deploy",`FIREBASE_TOKEN=\${{ secrets.FIREBASE_TOKEN }} yarn workspace ${e} deploy`)]]]})}})]}};e.default=s},24:function(t,e,n){var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};const r=o(n(202));const i={name:"Ignore Files Codegen",sourceFileIsRelevant:t=>t===".gitignore",run:(t,e)=>{const n=`# @${"generated"}\n\n${e}\n# additions\n.yarn\n**/bin/\n**/out/\n**/build/\n**/dist/\n`;return[{outputFilename:".eslintignore",outputContent:n},{outputFilename:".prettierignore",outputContent:n}]}};const a=[r.default,i];t.exports=a},747:t=>{t.exports=require("fs")},622:t=>{t.exports=require("path")}};var e={};function __webpack_require__(n){if(e[n]){return e[n].exports}var o=e[n]={exports:{}};var r=true;try{t[n].call(o.exports,o,o.exports,__webpack_require__);r=false}finally{if(r)delete e[n]}return o.exports}__webpack_require__.ab=__dirname+"/";return __webpack_require__(24)})();