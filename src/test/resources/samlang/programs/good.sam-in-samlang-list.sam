// ERROR_COUNT: 0

class List<T>(Nil(unit), Cons([T * List<T>])) {
  public function <T> of(t: T): List<T> =
    Cons([t, Nil(unit)])
  public method cons(t: T): List<T> =
    Cons([t, this])
}
class Developer(
  name: string, github: string,
  projects: List<string>,
) {
  public function sam(): Developer =
    val l = List.of("SAMLANG").cons("...");
    val github = "SamChou19815";
    { name: "Sam Zhou", github, projects: l }
}
class Main {
  function main(): Developer = Developer.sam()
}
