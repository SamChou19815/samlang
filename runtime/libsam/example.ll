; Generated by Clang, and hand removed a few complicated stuff.

declare void @builtin_println(i64*) nounwind
declare void @builtin_throw(i64*) nounwind
declare i64* @builtin_intToString(i64) nounwind
declare i64 @builtin_stringToInt(i64*) nounwind
declare i64* @builtin_stringConcat(i64*, i64*) nounwind

define i64 @factorial(i64 %0) local_unnamed_addr nounwind {
  %comparison = icmp slt i64 %0, 2
  br i1 %comparison, label %loop_end, label %loop

loop:
  %i = phi i64 [ %i2, %loop ], [ %0, %1 ]
  %acc = phi i64 [ %acc2, %loop ], [ 1, %1 ]
  %i2 = add i64 %i, -1
  %acc2 = mul i64 %i2, %acc
  %c2 = icmp slt i64 %i, 3
  br i1 %c2, label %loop_end, label %loop

loop_end:
  %result = phi i64 [ 1, %1 ], [ %acc2, %loop ]
  ret i64 %result
}

define void @compiled_program_main(i64** %0) local_unnamed_addr nounwind {
  %t0 = call i64 @factorial(i64 30) nounwind
  %t1 = call i64* @builtin_intToString(i64 %t0) nounwind
  call void @builtin_println(i64* %t1) nounwind
  ret void
}
